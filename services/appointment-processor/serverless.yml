service: appointment-processor

provider:
  name: aws
  runtime: nodejs20.x
  region: us-east-1
  stage: ${opt:stage, 'dev'}
  environment:
    EVENT_BUS_NAME: appointment-event-bus-${self:provider.stage}
    # Estas variables deben ser configuradas de forma segura (ej. SSM Parameter Store o .env)
    RDS_HOST: ${env:RDS_HOST}
    RDS_USER: ${env:RDS_USER}
    RDS_PASSWORD: ${env:RDS_PASSWORD}
    RDS_DATABASE: ${env:RDS_DATABASE}

plugins:
  - serverless-esbuild

package:
  individually: true

custom:
  esbuild:
    bundle: true
    minify: false
    sourcemap: true
    packager: pnpm

functions:
  processPE:
    handler: src/handlers/process.handler
    events:
      - sqs:
          arn:
            Fn::Join:
              - ":"
              - - "arn:aws:sqs"
                - ${self:provider.region}
                - { Ref: "AWS::AccountId" }
                - "appointments-queue-pe-${self:provider.stage}"

  processCL:
    handler: src/handlers/process.handler
    events:
      - sqs:
          arn:
            Fn::Join:
              - ":"
              - - "arn:aws:sqs"
                - ${self:provider.region}
                - { Ref: "AWS::AccountId" }
                - "appointments-queue-cl-${self:provider.stage}"

# NOTA: En un proyecto real, se definirían aquí los permisos IAM explícitos
# para que los lambdas puedan acceder a SQS, RDS (VPC) y EventBridge.